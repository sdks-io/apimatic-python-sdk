# -*- coding: utf-8 -*-

"""
apimaticapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimaticapi.api_helper import APIHelper
from apimaticapi.configuration import Server
from apimaticapi.utilities.file_wrapper import FileWrapper
from apimaticapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from apimaticapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimaticapi.models.api_validation_summary import ApiValidationSummary
from apimaticapi.exceptions.api_exception import APIException


class APIValidationExternalApisController(BaseController):

    """A Controller to access Endpoints in the apimaticapi API."""
    def __init__(self, config):
        super(APIValidationExternalApisController, self).__init__(config)

    def validate_api_via_file(self,
                              file):
        """Does a POST request to /validation/validate-via-file.

        Validate an API by uploading the API specification file.
        You can also specify [API
        Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata)
        while validating the API using this endpoint. When specifying
        Metadata, the uploaded file will be a zip file containing the API
        specification file and the `APIMATIC-META` json file.

        Args:
            file (typing.BinaryIO): The API specification file.<br>The type of
                the specification file should be any of the [supported
                formats](https://docs.apimatic.io/api-transformer/overview-tran
                sformer#supported-input-formats).

        Returns:
            ApiValidationSummary: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/validation/validate-via-file')
            .http_method(HttpMethodEnum.POST)
            .multipart_param(Parameter()
                             .key('file')
                             .value(file)
                             .default_content_type('application/octet-stream'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ApiValidationSummary.from_dictionary)
            .local_error('400', 'Bad Request', APIException)
            .local_error('401', 'Unauthenticated', APIException)
            .local_error('403', 'Forbidden', APIException)
            .local_error('500', 'Internal Server Error', APIException)
        ).execute()

    def validate_api_via_url(self,
                             description_url):
        """Does a GET request to /validation/validate-via-url.

        Validate an API by providing the URL of the API specification file.
        You can also specify [API
        Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata)
        while validating the API using this endpoint. When specifying
        Metadata, the URL provided will be that of a zip file containing the
        API specification file and the `APIMATIC-META` json file.

        Args:
            description_url (str): The URL for the API specification
                file.<br><br>**Note:** This URL should be publicly
                accessible.

        Returns:
            ApiValidationSummary: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/validation/validate-via-url')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('descriptionUrl')
                         .value(description_url))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ApiValidationSummary.from_dictionary)
            .local_error('400', 'Bad Request', APIException)
            .local_error('401', 'Unauthenticated', APIException)
            .local_error('403', 'Forbidden', APIException)
            .local_error('500', 'Internal Server Error', APIException)
        ).execute()
