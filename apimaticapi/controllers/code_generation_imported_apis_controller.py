# -*- coding: utf-8 -*-

"""
apimaticapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimaticapi.api_helper import APIHelper
from apimaticapi.configuration import Server
from apimaticapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from apimaticapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.configurations.endpoint_configuration import EndpointConfiguration
from apimaticapi.models.api_entity_code_generation import APIEntityCodeGeneration


class CodeGenerationImportedApisController(BaseController):

    """A Controller to access Endpoints in the apimaticapi API."""
    def __init__(self, config):
        super(CodeGenerationImportedApisController, self).__init__(config)

    def generate_sdk(self,
                     api_entity_id,
                     template):
        """Does a POST request to /api-entities/{api_entity_id}/code-generations/generate.

        Generate an SDK for an API Version. 
        This endpoint generates and then uploads the generated SDK to
        APIMatic's cloud storage. An ID for the generation performed is
        returned as part of the response.

        Args:
            api_entity_id (str): The ID of the API Entity to generate the SDK
                for.
            template (Platforms): The structure contains platforms that
                APIMatic CodeGen can generate SDKs and Docs in.

        Returns:
            APIEntityCodeGeneration: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/api-entities/{api_entity_id}/code-generations/generate')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('api_entity_id')
                            .value(api_entity_id)
                            .should_encode(True))
            .form_param(Parameter()
                        .key('template')
                        .value(template))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(APIEntityCodeGeneration.from_dictionary)
        ).execute()

    def download_sdk(self,
                     api_entity_id,
                     codegen_id):
        """Does a GET request to /api-entities/{api_entity_id}/code-generations/{codegen_id}/generated-sdk.

        Download the SDK generated via the Generate SDK endpoint.

        Args:
            api_entity_id (str): The ID of the API Entity for which the SDK
                was generated.
            codegen_id (str): The ID of code generation received in the
                response of the [SDK generation
                call](https://www.apimatic.io/api-docs-preview/dashboard/60eea3
                b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-im
                ported-apis/generate-sdk).

        Returns:
            binary: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/api-entities/{api_entity_id}/code-generations/{codegen_id}/generated-sdk')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('api_entity_id')
                            .value(api_entity_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('codegen_id')
                            .value(codegen_id)
                            .should_encode(True))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).endpoint_configuration(
            EndpointConfiguration()
            .has_binary_response(True)
        ).execute()

    def list_all_code_generations_imported(self,
                                           api_entity_id):
        """Does a GET request to /api-entities/{api_entity_id}/code-generations.

        Get a list of all SDK generations done against an API Version via the
        Generate SDK endpoint.

        Args:
            api_entity_id (str): The ID of the API Entity for which to list
                code generations.

        Returns:
            List[APIEntityCodeGeneration]: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/api-entities/{api_entity_id}/code-generations')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('api_entity_id')
                            .value(api_entity_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(APIEntityCodeGeneration.from_dictionary)
        ).execute()

    def get_a_code_generation_imported(self,
                                       api_entity_id,
                                       codegen_id):
        """Does a GET request to /api-entities/{api_entity_id}/code-generations/{codegen_id}.

        Get details on an SDK generation performed via the Generate SDK
        endpoint.

        Args:
            api_entity_id (str): The ID of the API Entity to fetch the code
                generation for.
            codegen_id (str): The ID of the code generation to fetch. The code
                generation ID is received in the response of the [SDK
                generation
                call](https://www.apimatic.io/api-docs-preview/dashboard/60eea3
                b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-im
                ported-apis/generate-sdk).

        Returns:
            APIEntityCodeGeneration: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/api-entities/{api_entity_id}/code-generations/{codegen_id}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('api_entity_id')
                            .value(api_entity_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('codegen_id')
                            .value(codegen_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(APIEntityCodeGeneration.from_dictionary)
        ).execute()

    def delete_code_generation(self,
                               api_entity_id,
                               codegen_id):
        """Does a DELETE request to /api-entities/{api_entity_id}/code-generations/{codegen_id}.

        Delete an SDK generation performed for an API Version via the Generate
        SDK endpoint.

        Args:
            api_entity_id (str): The ID of the API Entity to delete the code
                generation for.
            codegen_id (str): The ID of the code generation to delete. The
                code generation ID is received in the response of the [SDK
                generation
                call](https://www.apimatic.io/api-docs-preview/dashboard/60eea3
                b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-im
                ported-apis/generate-sdk).

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/api-entities/{api_entity_id}/code-generations/{codegen_id}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('api_entity_id')
                            .value(api_entity_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('codegen_id')
                            .value(codegen_id)
                            .should_encode(True))
            .auth(Single('Authorization'))
        ).execute()
