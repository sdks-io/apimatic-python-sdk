# -*- coding: utf-8 -*-

"""
apimaticapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimaticapi.api_helper import APIHelper
from apimaticapi.configuration import Server
from apimaticapi.utilities.file_wrapper import FileWrapper
from apimaticapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from apimaticapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.configurations.endpoint_configuration import EndpointConfiguration
from apimaticapi.models.transformation import Transformation


class TransformationController(BaseController):

    """A Controller to access Endpoints in the apimaticapi API."""
    def __init__(self, config):
        super(TransformationController, self).__init__(config)

    def transform_via_file(self,
                           file,
                           export_format):
        """Does a POST request to /transformations/transform-via-file.

        Transform an API into any of the supported API specification formats
        by uploading the API specification file. This endpoint transforms and
        then uploads the transformed API specification to APIMatic's cloud
        storage. An ID for the transformation performed is returned as part of
        the response.

        Args:
            file (typing.BinaryIO): The API specification file.<br>The type of
                the specification file should be any of the [supported
                formats](https://docs.apimatic.io/api-transformer/overview-tran
                sformer#supported-input-formats).
            export_format (ExportFormats): The structure contains API
                specification formats that Transformer can convert to.

        Returns:
            Transformation: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/transformations/transform-via-file')
            .http_method(HttpMethodEnum.POST)
            .multipart_param(Parameter()
                             .key('file')
                             .value(file)
                             .default_content_type('application/octet-stream'))
            .form_param(Parameter()
                        .key('export_format')
                        .value(export_format))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Transformation.from_dictionary)
        ).execute()

    def transform_via_url(self,
                          body):
        """Does a POST request to /transformations/transform-via-url.

        Transform an API into any of the supported API specification formats
        by providing the URL of the API specification file.
        This endpoint transforms and then uploads the transformed API
        specification to APIMatic's cloud storage. An ID for the
        transformation performed is returned as part of the response.

        Args:
            body (TransformViaUrlRequest): Request Body

        Returns:
            Transformation: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/transformations/transform-via-url')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/vnd.apimatic.urlTransformDto.v1+json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Transformation.from_dictionary)
        ).execute()

    def download_transformed_file(self,
                                  transformation_id):
        """Does a GET request to /transformations/{transformation_id}/converted-file.

        Download the transformed API specification file transformed via the
        Transformation endpoints.

        Args:
            transformation_id (str): The ID of transformation received in the
                response of the [Transform Via File
                ](https://www.apimatic.io/api-docs-preview/dashboard/60eea3b7a7
                3395c3052d961b/v/3_0#/http/api-endpoints/transformation/transfo
                rm-via-file) or [Transform Via URL 
                ](https://www.apimatic.io/api-docs-preview/dashboard/60eea3b7a7
                3395c3052d961b/v/3_0#/http/api-endpoints/transformation/transfo
                rm-via-url) calls.

        Returns:
            binary: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/transformations/{transformation_id}/converted-file')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('transformation_id')
                            .value(transformation_id)
                            .should_encode(True))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).endpoint_configuration(
            EndpointConfiguration()
            .has_binary_response(True)
        ).execute()

    def download_input_file_transformation(self,
                                           transformation_id):
        """Does a GET request to /transformations/{transformation_id}/input-file.

        Download the API Specification file used as input for a particular
        Transformation performed via the Transformation endpoints.

        Args:
            transformation_id (str): The ID of the transformation to download
                the API specification for. The transformation ID is received
                in the response of the [Transform Via File
                ](https://www.apimatic.io/api-docs-preview/dashboard/60eea3b7a7
                3395c3052d961b/v/3_0#/http/api-endpoints/transformation/transfo
                rm-via-file) or [Transform Via
                URL](https://www.apimatic.io/api-docs-preview/dashboard/60eea3b
                7a73395c3052d961b/v/3_0#/http/api-endpoints/transformation/tran
                sform-via-url) calls.

        Returns:
            binary: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/transformations/{transformation_id}/input-file')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('transformation_id')
                            .value(transformation_id)
                            .should_encode(True))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).endpoint_configuration(
            EndpointConfiguration()
            .has_binary_response(True)
        ).execute()

    def list_all_transformations(self):
        """Does a GET request to /transformations.

        Get a list of all API transformations performed.

        Returns:
            List[Transformation]: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/transformations')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Transformation.from_dictionary)
        ).execute()

    def get_a_transformation(self,
                             transformation_id):
        """Does a GET request to /transformations/{transformation_id}.

        Get details on a particular Transformation performed via the
        Transformation endpoints.

        Args:
            transformation_id (str): The ID of the transformation to fetch.
                The transformation ID is received in the response of the
                [Transform Via File
                ](https://www.apimatic.io/api-docs-preview/dashboard/60eea3b7a7
                3395c3052d961b/v/3_0#/http/api-endpoints/transformation/transfo
                rm-via-file) or [Transform Via URL 
                ](https://www.apimatic.io/api-docs-preview/dashboard/60eea3b7a7
                3395c3052d961b/v/3_0#/http/api-endpoints/transformation/transfo
                rm-via-url) calls.

        Returns:
            Transformation: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/transformations/{transformation_id}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('transformation_id')
                            .value(transformation_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('Authorization'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Transformation.from_dictionary)
        ).execute()

    def delete_transformation(self,
                              transformation_id):
        """Does a DELETE request to /transformations/{transformation_id}.

        Delete a particular Transformation performed for an API via the
        Transformation endpoints.

        Args:
            transformation_id (str): The ID of the transformation to delete.
                The transformation ID is received in the response of the
                [Transform Via File
                ](https://www.apimatic.io/api-docs-preview/dashboard/60eea3b7a7
                3395c3052d961b/v/3_0#/http/api-endpoints/transformation/transfo
                rm-via-file) or [Transform Via
                URL](https://www.apimatic.io/api-docs-preview/dashboard/60eea3b
                7a73395c3052d961b/v/3_0#/http/api-endpoints/transformation/tran
                sform-via-url) calls.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/transformations/{transformation_id}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('transformation_id')
                            .value(transformation_id)
                            .should_encode(True))
            .auth(Single('Authorization'))
        ).execute()
