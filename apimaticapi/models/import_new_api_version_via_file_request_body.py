# -*- coding: utf-8 -*-

"""
apimaticapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ImportNewAPIVersionViaFileRequestBody(object):

    """Implementation of the 'ImportNewAPIVersionViaFileRequestBody' model.

    TODO: type model description here.

    Attributes:
        version_override (str): The version number with which the new API
            version will be imported. This version number will override the
            version specified in the API specification file.<br>APIMatic
            recommends versioning the API with the [versioning
            scheme](https://docs.apimatic.io/define-apis/basic-settings/#versio
            n) documented in the docs.
        file (binary): The API specification file.<br>The type of the
            specification file should be any of the [supported
            formats](https://docs.apimatic.io/api-transformer/overview-transfor
            mer#supported-input-formats).

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "version_override": 'version_override',
        "file": 'file'
    }

    def __init__(self,
                 version_override=None,
                 file=None):
        """Constructor for the ImportNewAPIVersionViaFileRequestBody class"""

        # Initialize members of the class
        self.version_override = version_override 
        self.file = file 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        version_override = dictionary.get("version_override") if dictionary.get("version_override") else None
        file = dictionary.get("file") if dictionary.get("file") else None
        # Return an object of this model
        return cls(version_override,
                   file)
