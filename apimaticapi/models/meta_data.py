# -*- coding: utf-8 -*-

"""
apimaticapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from apimaticapi.models.api_validation_summary import ApiValidationSummary
from apimaticapi.models.docs_validation_summary import DocsValidationSummary
from apimaticapi.models.import_validation_summary import ImportValidationSummary


class MetaData(object):

    """Implementation of the 'MetaData' model.

    TODO: type model description here.

    Attributes:
        import_validation_summary (ImportValidationSummary): TODO: type
            description here.
        api_validation_summary (ApiValidationSummary): TODO: type description
            here.
        docs_validation_summary (DocsValidationSummary): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "import_validation_summary": 'importValidationSummary',
        "api_validation_summary": 'apiValidationSummary',
        "docs_validation_summary": 'docsValidationSummary'
    }

    def __init__(self,
                 import_validation_summary=None,
                 api_validation_summary=None,
                 docs_validation_summary=None):
        """Constructor for the MetaData class"""

        # Initialize members of the class
        self.import_validation_summary = import_validation_summary 
        self.api_validation_summary = api_validation_summary 
        self.docs_validation_summary = docs_validation_summary 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        import_validation_summary = ImportValidationSummary.from_dictionary(dictionary.get('importValidationSummary')) if dictionary.get('importValidationSummary') else None
        api_validation_summary = ApiValidationSummary.from_dictionary(dictionary.get('apiValidationSummary')) if dictionary.get('apiValidationSummary') else None
        docs_validation_summary = DocsValidationSummary.from_dictionary(dictionary.get('docsValidationSummary')) if dictionary.get('docsValidationSummary') else None
        # Return an object of this model
        return cls(import_validation_summary,
                   api_validation_summary,
                   docs_validation_summary)
