# -*- coding: utf-8 -*-

"""
apimaticapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from apimaticapi.models.api_validation_summary import ApiValidationSummary


class Transformation(object):

    """Implementation of the 'Transformation' model.

    Transformation structure encapsulates all the details of a
    Transformation.

    Attributes:
        id (str): Unique Transformation Identifier
        transformed_on (str): Transformation Date and Time
        user_id (str): Unique User Identifier
        inputted_file (str): API Specification file to be transformed
        generated_file (str): API Specification file transformed to desired
            format
        export_format (str): Desired Specification format
        transformation_source (str): Source of Transformation
        transformation_input (str): Via File or URL
        code_gen_version (str): CodeGen Engine Version
        success (bool): Successful Transformation Flag
        import_summary (ApiValidationSummary): TODO: type description here.
        api_validation_summary (ApiValidationSummary): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "transformed_on": 'transformedOn',
        "user_id": 'userId',
        "inputted_file": 'inputtedFile',
        "generated_file": 'generatedFile',
        "export_format": 'exportFormat',
        "transformation_source": 'transformationSource',
        "transformation_input": 'transformationInput',
        "code_gen_version": 'codeGenVersion',
        "success": 'success',
        "import_summary": 'importSummary',
        "api_validation_summary": 'apiValidationSummary'
    }

    def __init__(self,
                 id=None,
                 transformed_on=None,
                 user_id=None,
                 inputted_file=None,
                 generated_file=None,
                 export_format=None,
                 transformation_source=None,
                 transformation_input=None,
                 code_gen_version=None,
                 success=None,
                 import_summary=None,
                 api_validation_summary=None):
        """Constructor for the Transformation class"""

        # Initialize members of the class
        self.id = id 
        self.transformed_on = transformed_on 
        self.user_id = user_id 
        self.inputted_file = inputted_file 
        self.generated_file = generated_file 
        self.export_format = export_format 
        self.transformation_source = transformation_source 
        self.transformation_input = transformation_input 
        self.code_gen_version = code_gen_version 
        self.success = success 
        self.import_summary = import_summary 
        self.api_validation_summary = api_validation_summary 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        transformed_on = dictionary.get("transformedOn") if dictionary.get("transformedOn") else None
        user_id = dictionary.get("userId") if dictionary.get("userId") else None
        inputted_file = dictionary.get("inputtedFile") if dictionary.get("inputtedFile") else None
        generated_file = dictionary.get("generatedFile") if dictionary.get("generatedFile") else None
        export_format = dictionary.get("exportFormat") if dictionary.get("exportFormat") else None
        transformation_source = dictionary.get("transformationSource") if dictionary.get("transformationSource") else None
        transformation_input = dictionary.get("transformationInput") if dictionary.get("transformationInput") else None
        code_gen_version = dictionary.get("codeGenVersion") if dictionary.get("codeGenVersion") else None
        success = dictionary.get("success") if "success" in dictionary.keys() else None
        import_summary = ApiValidationSummary.from_dictionary(dictionary.get('importSummary')) if dictionary.get('importSummary') else None
        api_validation_summary = ApiValidationSummary.from_dictionary(dictionary.get('apiValidationSummary')) if dictionary.get('apiValidationSummary') else None
        # Return an object of this model
        return cls(id,
                   transformed_on,
                   user_id,
                   inputted_file,
                   generated_file,
                   export_format,
                   transformation_source,
                   transformation_input,
                   code_gen_version,
                   success,
                   import_summary,
                   api_validation_summary)
